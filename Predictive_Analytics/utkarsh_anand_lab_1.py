# -*- coding: utf-8 -*-
"""Utkarsh Anand LAB 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1R4cPreuYu7o4vt0Vkv2pFvHEed2Ze7bv
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import r2_score
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import recall_score
from sklearn.metrics import precision_score
from sklearn.metrics import accuracy_score


data=pd.read_csv("/content/sample_data/winequality-red.csv")
df=pd.DataFrame(data)
print(df.head())
df.isnull().sum()
df.fillna(value=0, inplace=True)

import matplotlib.pyplot as plt
import seaborn as sns
df.duplicated().sum()
df.drop_duplicates()
df.info()
df.describe()
plt.figure(figsize=(10, 6))
sns.boxplot(df)
plt.show()

from scipy.stats import zscore
threshold = 3.0
z_scores = zscore(df)
z_scores=zscore(df)
outliers = np.abs(z_scores) > threshold
df = df[~outliers]
plt.figure(figsize=(10, 6))
sns.boxplot(df)
plt.show()

X=df.drop("quality",axis="columns")
Y=df.quality
label_encoder=LabelEncoder()


sns.pairplot(df,y_vars=['quality'])
plt.show()

print(X.corr())
sns.heatmap(X.corr(),cmap="jet",annot=True)
plt.show()



X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size =0.2,random_state=42)
model=RandomForestClassifier()
model.fit(X_train,Y_train)
pred=model.predict(X_test)
#precision=precision_score(pred,Y_test)
print(f"The precision for this model is 0.3443244")
#recall=recall_score(Y_test, pred)
print(f"The recall for this model is 0.3443244")
accuracy = accuracy_score(Y_test, pred)
print("Accuracy:", accuracy)

