# -*- coding: utf-8 -*-
"""LVADSUSR127-UTKARSH-IA2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1749Q_d5TNHtS8vE2f4JeFOPYAOiV-zyt
"""

#1
import numpy as np
rgb_image = np.array([[[255,0,0],[0,255,0],[0,0,255]],[[255,255,0],[255,0,255],[0,255,255]],[[127,127,127],[200,200,200],[50,50,50]]])
values = np.array([0.2989, 0.5870, 0.1140])
grayscale = np.dot(rgb_image, values)
print(grayscale)

#2
def normalise(data):
    mean = np.mean(data, axis=0)
    std = np.std(data, axis=0)
    normalized_data = (data - mean) / std
    return normalized_data

health_data = np.array([[30, 170, 70], [40, 180, 80], [25, 160, 60]])
normalized_data = normalise(health_data)
print(normalized_data)

#3
sensor_data = np.array([[[255,0,0],[0,255,0],[0,0,255]],[[255,255,0],[255,0,255],[0,255,255]],[[127,127,127],[200,200,200],[50,50,50]]])
combined_output = np.stack([sensor_data[0].flatten(),sensor_data[1].flatten(),sensor_data[2].flatten()])
print(combined_output)

#4
sports_data = np.array([[30, 170, 200], [40, 180, 80], [25, 160, 20]])
improvement = sports_data[:, -1] - sports_data[:, 0]
print(improvement)

#5
scores = np.array([[30, 170, 200], [40, -1, 80], [25, 160, -1]])
import numpy as np
averages = []
for marks in scores.T:
    average = np.mean(marks[marks != -1])
    averages.append(average)
print(averages)

#6
climate_data = np.array([[30, 170, 200], [40, 180, 80], [25, 160, 20]])
calibrations = np.array([2.3,4.2,5.1])

def modify_value(climate_data, calibrations):
    adjusted_data = climate_data * calibrations.reshape(-1, 1)
    return adjusted_data

adjusted_data = modify_value(climate_data, calibrations)
print(adjusted_data)

#7
import pandas as pd
data = {
    'Name' : ['Alice','Bob','Charlie','David','Eve','Frank','Grace'],
    'Age'  : [25,30,35,40,45,50,55],
    'City' : ['New York','Los Angeles','Chicago','Houston','Pheonix','Miami','Boston'],
    'Department': ['HR','IT','Finance','Marketing','Sales','IT','HR']
}
df = pd.DataFrame(data)
df = df[['Name', 'City']][df['Age'] > 45]
df.set_index('Name', inplace=True)
print(df)

#8
df = pd.read_csv("super_market.csv")
filtered_df = df[(df['Category'] == 'Fruit') & (df['Promotion'] == False) & (df['Price'] > df[df['Category'] == 'Fruit']['Price'].mean())]

print(filtered_df)

#9
project_data = pd.read_csv('projectdata.csv')
employee_data = pd.read_csv('employeedata.csv')
merged = employee_data.merge(project_data, on='Employee' ,how='left')
merged.fillna('Not assigned', inplace=True)
print(merged)

#10
data = {'Department':['Electronics','Electronics','Clothing','Clothing','Home goods'],
        'SalesPerson':['Alice','Bob','Charlie','David','Eve'],
        'Sales':[70000,50000,30000,40000,60000]}
df = pd.DataFrame(data)
avg_salesperson = df.groupby(['Department', 'SalesPerson'])['Sales'].mean().reset_index()
avg_department = avg_salesperson.groupby('Department')['Sales'].mean().reset_index()
ranked_departments = avg_department.sort_values(by='Sales', ascending=False)
print(ranked_departments)